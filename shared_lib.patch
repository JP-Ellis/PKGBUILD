--- a/examples/Makefile
+++ b/examples/Makefile
@@ -24,7 +24,7 @@ ifeq ($(GZIP_USE),true)
 endif
 
 # Check distribution (use local version first, then installed version).
-ifneq ("$(wildcard ../lib/libpythia8.a)","")
+ifneq ("$(wildcard ../lib/libpythia8.so)","")
   PREFIX_LIB=../lib
   PREFIX_INCLUDE=../include
 endif
@@ -41,6 +41,9 @@ CXX_COMMON:=-I$(PREFIX_INCLUDE) $(CXX_COMMON) -Wl,-rpath,$(PREFIX_LIB) -ldl
 # All targets (no default behavior).
 all:
 	@echo "Usage: make mainXX"
+	@echo "Or:    make mainALL"
+
+mainALL: main01 main02 main03 main04 main05 main06 main07 main08 main09 main10 main11 main12 main13 main14 main15 main16 main17 main18 main19 main20 main21 main22 main23 main24 main25 main26 main27 main28 main29 main30 main31 main32 main33 main34 main37 main38 main41 main42 main43 main46 main48 main51 main52 main53 main54 main55 main61 main62 main63 main64 main71 main72 main73 main80 main81 main82 main83 main84 main85 main86 main87 main88 main89 main91 main92
 
 # The Makefile configuration.
 Makefile.inc:
@@ -48,16 +51,16 @@ Makefile.inc:
                 in the top PYTHIA directory)
 
 # PYTHIA libraries.
-$(PREFIX_LIB)/libpythia8.a :
+$(PREFIX_LIB)/libpythia8.so :
 	$(error Error: PYTHIA must be built, please run "make"\
                 in the top PYTHIA directory)
 
 # Examples without external dependencies.
-main% : main%.cc $(PREFIX_LIB)/libpythia8.a
+main% : main%.cc $(PREFIX_LIB)/libpythia8.so
 	$(CXX) $^ -o $@ $(CXX_COMMON)
 
 # GZIP (required).
-main34: $$@.cc $(PREFIX_LIB)/libpythia8.a
+main34: $$@.cc $(PREFIX_LIB)/libpythia8.so
 ifeq ($(GZIP_USE),true)
 	$(CXX) $^ -o $@ $(CXX_COMMON)
 else
@@ -66,7 +69,7 @@ endif
 
 # HEPMC2.
 main41 main42 main43 main85 main86 main87 main88 main89: $$@.cc\
-	$(PREFIX_LIB)/libpythia8.a
+	$(PREFIX_LIB)/libpythia8.so
 ifeq ($(HEPMC2_USE),true)
 	$(CXX) $^ -o $@ -I$(HEPMC2_INCLUDE) $(CXX_COMMON)\
 	 -L$(HEPMC2_LIB) -Wl,-rpath,$(HEPMC2_LIB) -lHepMC
@@ -75,7 +78,7 @@ else
 endif
 
 # PROMC.
-main46: $$@.cc $(PREFIX_LIB)/libpythia8.a
+main46: $$@.cc $(PREFIX_LIB)/libpythia8.so
 ifeq ($(PROMC_USE),true)
 	$(CXX) $^ -o $@ -I$(PROMC_INCLUDE)/src -I$(PROMC_INCLUDE)/include\
 	 $(CXX_COMMON) -DPROMC=\"$(PROMC_INCLUDE)\" -Wno-long-long\
@@ -97,7 +100,7 @@ else
 endif
 
 # FASTJET3.
-main71 main72: $$@.cc $(PREFIX_LIB)/libpythia8.a
+main71 main72: $$@.cc $(PREFIX_LIB)/libpythia8.so
 ifeq ($(FASTJET3_USE),true)
 	$(CXX) $^ -o $@ -I$(FASTJET3_INCLUDE) $(CXX_COMMON)\
 	 -L$(FASTJET3_LIB) -Wl,-rpath,$(FASTJET3_LIB) -lfastjet
@@ -106,7 +109,7 @@ else
 endif
 
 # FASTJET3 and HEPMC2.
-main81 main82 main83 main84: $$@.cc $(PREFIX_LIB)/libpythia8.a
+main81 main82 main83 main84: $$@.cc $(PREFIX_LIB)/libpythia8.so
 ifeq ($(FASTJET3_USE)$(HEPMC2_USE),truetrue)
 	$(CXX) $^ -o $@ -I$(FASTJET3_INCLUDE) -I$(HEPMC2_INCLUDE) $(CXX_COMMON)\
 	 -L$(HEPMC2_LIB) -Wl,-rpath,$(HEPMC2_LIB) -lHepMC\
@@ -116,14 +119,14 @@ else
 endif
 
 # ROOT (turn off all warnings for readability).
-main91: $$@.cc $(PREFIX_LIB)/libpythia8.a
+main91: $$@.cc $(PREFIX_LIB)/libpythia8.so
 ifeq ($(ROOT_USE),true)
 	$(CXX) $^ -o $@ -w -I$(ROOT_INCLUDE) $(CXX_COMMON)\
 	 -Wl,-rpath,$(ROOT_LIB) `$(ROOT_BIN)root-config --glibs`
 else
 	@echo "Error: $@ requires ROOT"
 endif
-main92: $$@.cc $$@.h $$@LinkDef.h $(PREFIX_LIB)/libpythia8.a
+main92: $$@.cc $$@.h $$@LinkDef.h $(PREFIX_LIB)/libpythia8.so
 ifeq ($(ROOT_USE),true)
 	export LD_LIBRARY_PATH=$$LD_LIBRARY_PATH:$(ROOT_LIB);\
 	 $(ROOT_BIN)rootcint -f $@Dct.cc -c -I$(PREFIX_INCLUDE) $@.h $@LinkDef.h
@@ -134,11 +137,11 @@ else
 endif
 
 # User-written examples for tutorials, without external dependencies.
-mymain% : mymain%.cc $(PREFIX_LIB)/libpythia8.a
+mymain% : mymain%.cc $(PREFIX_LIB)/libpythia8.so
 	$(CXX) $^ -o $@ $(CXX_COMMON)
 
 # Internally used tests, without external dependencies.
-test% : test%.cc $(PREFIX_LIB)/libpythia8.a
+test% : test%.cc $(PREFIX_LIB)/libpythia8.so
 	$(CXX) $^ -o $@ $(CXX_COMMON)
 
 # Clean.
